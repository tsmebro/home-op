---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1-12
  primaryUpdateStrategy: unsupervised
  storage:
    size: 15Gi
    storageClass: local-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
  monitoring:
    enablePodMonitor: true
    podMonitorMetricRelabelings:
      - sourceLabels: ["cluster"]
        targetLabel: cnpg_cluster
        action: replace
      - regex: cluster
        action: labeldrop
      # Note: Bootstrap is needed when recovering from an existing cnpg >
#  bootstrap:
#    recovery:
#      source: &previousCluster postgres16-v1
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresql/
      endpointURL: "http://192.168.1.169:9000"
      serverName: &currentCluster postgres16-v2
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
# Note: externalClusters is needed when recovering from an existing cnpg cluster
#  externalClusters:
#    - name: *previousCluster
#      barmanObjectStore:
#        <<: *barmanObjectStore
#        serverName: *previousCluster
