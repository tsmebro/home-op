---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app nas
  namespace: networking
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: |
      10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
#    hajimari.io/icon: mdi:food
#    hajimari.io/url: "https://recipes.${SECRET_DOMAIN}/recipes/all"
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  ingressClassName: internal
  rules:
    - host: &host "nas.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: *app
                port:
                  number: 80
  tls:
    - hosts:
        - *host
      # secretName: "${SECRET_DOMAIN/./-}-tls"
---
# ref: https://kristhecodingunicorn.com/post/k8s_proxy_svc/#proxy-to-external-services-with-service-without-selectors
apiVersion: v1
kind: Service
metadata:
  name: &app nas
  namespace: networking
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  type: ClusterIP
  ports:
    - name: http
      port: &port 80
      protocol: TCP
      targetPort: *port
---
# ref: https://kristhecodingunicorn.com/post/k8s_proxy_svc/#proxy-to-external-services-with-service-without-selectors
apiVersion: v1
kind: Endpoints
metadata:
  name: &app nas
  namespace: networking
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
subsets:
  - addresses:
      - ip: ${LOCAL_LAN_TRUENAS}
    ports:
      - name: http
        port: 80
        protocol: TCP
